---
apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: tf-xdynamodb-v1beta1.aws.crossplane.afterpay.cloud
  namespace: upbound-system
  labels:
    provider: terraform
    version: v1beta1
spec:
  writeConnectionSecretsToNamespace: upbound-system
  compositeTypeRef:
    apiVersion: aws.crossplane.afterpay.cloud/v1beta1
    kind: XDynamodb
  resources:
    - name: terraform-dynamodb
      base:
        apiVersion: tf.upbound.io/v1beta1
        kind: Workspace
        spec:
          forProvider:
            source: Remote
            initArgs:
              - -upgrade=true
            planArgs:
              - -parallelism=2
            applyArgs:
              - -auto-approve
<<<<<<< HEAD
<<<<<<< HEAD:crossplane-terraform/templates/compositions/dynamodb/composition.yaml
            module: git::https://github.com/wrasdf/terraform-dynamodb.git//v1beta1?ref=main
=======
            module: git::https://github.com/wrasdf/terraform-dynamodb.git//v1beta2?ref=main
>>>>>>> f8db41c (spike different version):crossplane-terraform/templates/compositions/dynamodb/composition-v1beta1.yaml
=======
            module: git::https://github.com/wrasdf/terraform-dynamodb.git//v1beta1?ref=main
>>>>>>> eea8ed4 (Add multiple apiVersion support v1)
            vars:
              - key: name
              - key: hash_key
              - key: range_key
            varmap:
              local_secondary_indexes: []
              global_secondary_indexes: []
              replica_regions: []
              attributes: []
            providerConfigRef:
              name: crossplane-provider-terraform-conf-v1
      patches:
        - fromFieldPath: metadata.labels
          toFieldPath: metadata.labels
        - fromFieldPath: metadata.annotations
          toFieldPath: metadata.annotations
        - fromFieldPath: spec.name
          toFieldPath: spec.forProvider.vars[0].value
        - fromFieldPath: spec.hash_key
          toFieldPath: spec.forProvider.vars[1].value
        - fromFieldPath: spec.range_key
          toFieldPath: spec.forProvider.vars[2].value
        - fromFieldPath: spec.local_secondary_indexes
          toFieldPath: spec.forProvider.varmap.local_secondary_indexes
        - fromFieldPath: spec.global_secondary_indexes
          toFieldPath: spec.forProvider.varmap.global_secondary_indexes
        - fromFieldPath: spec.replica_regions
          toFieldPath: spec.forProvider.varmap.replica_regions
        - fromFieldPath: spec.attributes
          toFieldPath: spec.forProvider.varmap.attributes
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.outputs.dynamodb_table_arn
          toFieldPath: status.outputs.dynamodb_table_arn
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.outputs.dynamodb_table_id
          toFieldPath: status.outputs.dynamodb_table_id
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.outputs.dynamodb_table_stream_arn
          toFieldPath: status.outputs.dynamodb_table_stream_arn